Note! You will need tensorflow-gpu version 2.8.0 or higher. Your version is 2.8.0
[PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]
Found 58085 files belonging to 1 classes.
Using 40660 files for training.
Found 58085 files belonging to 1 classes.
Using 17425 files for validation.
(5, 360, 240, 3)
WARNING:tensorflow:AutoGraph could not transform <function <lambda> at 0x000001E5C5DCE790> and will run it as-is.
Cause: could not parse the source code of <function <lambda> at 0x000001E5C5DCE790>: no matching AST found among candidates:
To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert
WARNING: AutoGraph could not transform <function <lambda> at 0x000001E5C5DCE790> and will run it as-is.
Cause: could not parse the source code of <function <lambda> at 0x000001E5C5DCE790>: no matching AST found among candidates:
To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert
<MapDataset element_spec=TensorSpec(shape=(None, 360, 240, 3), dtype=tf.float32, name=None)>
(5, 360, 240, 3)
In range between:  0.0002559288  and:  0.90256953
Wall time: 17.2 s
Generating DCGAN model.
Adding Dense...
Adding Batch Normalization...
Adding Leaky ReLU...
Reshape...
(None, 45, 30, 256)
Adding Convolution...
(None, 45, 30, 128)
Adding 2nd Batch Normalization...
Adding 2nd Leaky ReLU...
Adding 2nd Convolution...
(None, 90, 60, 64)
Adding 3rd Batch Normalization...
Adding 3rd Leaky ReLU...
Adding 3rd Convolution...
(None, 180, 120, 32)
Adding 4th Batch Normalization...
Adding 4th Leaky ReLU...
Adding 4th Convolution...
(None, 360, 240, 3)
DCGAN model completed
(1, 360, 240, 3)
Model: "sequential"
_________________________________________________________________
 Layer (type)                Output Shape              Param #
=================================================================
 dense (Dense)               (None, 345600)            34560000
 batch_normalization (BatchN  (None, 345600)           1382400
 ormalization)
 leaky_re_lu (LeakyReLU)     (None, 345600)            0
 reshape (Reshape)           (None, 45, 30, 256)       0
 conv2d_transpose (Conv2DTra  (None, 45, 30, 128)      819200
 nspose)
 batch_normalization_1 (Batc  (None, 45, 30, 128)      512
 hNormalization)
 leaky_re_lu_1 (LeakyReLU)   (None, 45, 30, 128)       0
 conv2d_transpose_1 (Conv2DT  (None, 90, 60, 64)       204800
 ranspose)
 batch_normalization_2 (Batc  (None, 90, 60, 64)       256
 hNormalization)
 leaky_re_lu_2 (LeakyReLU)   (None, 90, 60, 64)        0
 conv2d_transpose_2 (Conv2DT  (None, 180, 120, 32)     51200
 ranspose)
 batch_normalization_3 (Batc  (None, 180, 120, 32)     128
 hNormalization)
 leaky_re_lu_3 (LeakyReLU)   (None, 180, 120, 32)      0
 conv2d_transpose_3 (Conv2DT  (None, 360, 240, 3)      2400
 ranspose)
=================================================================
Total params: 37,020,896
Trainable params: 36,329,248
Non-trainable params: 691,648
_________________________________________________________________
Wall time: 10.8 s
DCGAN descriminator model
Adding Convolutional...
Adding Leaky Relu...
Adding 2nd Convolutional...
Adding 2nd Leaky Relu...
Adding 3rd Convolutional...
Adding 3rd Leaky Relu...
Adding 4th Convolutional...
Adding 4th Leaky Relu...
Adding Flatten...
Adding Dense...
(None, 1)
DCGAN descriminator Completed!!
tf.Tensor([[0.00014148]], shape=(1, 1), dtype=float32)
Model: "sequential_1"
_________________________________________________________________
 Layer (type)                Output Shape              Param #
=================================================================
 conv2d (Conv2D)             (None, 180, 120, 32)      2432
 leaky_re_lu_4 (LeakyReLU)   (None, 180, 120, 32)      0
 dropout (Dropout)           (None, 180, 120, 32)      0
 conv2d_1 (Conv2D)           (None, 90, 60, 64)        51264
 leaky_re_lu_5 (LeakyReLU)   (None, 90, 60, 64)        0
 dropout_1 (Dropout)         (None, 90, 60, 64)        0
 conv2d_2 (Conv2D)           (None, 45, 30, 128)       204928
 leaky_re_lu_6 (LeakyReLU)   (None, 45, 30, 128)       0
 dropout_2 (Dropout)         (None, 45, 30, 128)       0
 conv2d_3 (Conv2D)           (None, 23, 15, 256)       819456
 leaky_re_lu_7 (LeakyReLU)   (None, 23, 15, 256)       0
 dropout_3 (Dropout)         (None, 23, 15, 256)       0
 flatten (Flatten)           (None, 88320)             0
 dense_1 (Dense)             (None, 1)                 88321
=================================================================
Total params: 1,166,401
Trainable params: 1,166,401
Non-trainable params: 0
_________________________________________________________________
WARNING:tensorflow:From <timed exec>:1: _CollectiveAllReduceStrategyExperimental.__init__ (from tensorflow.python.distribute.collective_all_reduce_strategy) is deprecated and will be removed in a future version.
Instructions for updating:
use distribute.MultiWorkerMirroredStrategy instead
WARNING:tensorflow:Collective ops is not configured at program startup. Some performance features may not be enabled.
INFO:tensorflow:Single-worker MultiWorkerMirroredStrategy with local_devices = ('/device:GPU:0',), communication = CommunicationImplementation.AUTO
Training Start...
Epoch : 0
Training step
Generator for noise
Discriminator for images
Discriminator for noise
gen_loss : Tensor("binary_crossentropy/weighted_loss/value:0", shape=(), dtype=float32)
disc_loss : Tensor("add:0", shape=(), dtype=float32)
Training step
Generator for noise
Discriminator for images
Discriminator for noise
gen_loss : Tensor("binary_crossentropy/weighted_loss/value:0", shape=(), dtype=float32)
disc_loss : Tensor("add:0", shape=(), dtype=float32)
Time for epoch 1 is 1184.7973396778107 sec
Epoch : 1
Time for epoch 2 is 1156.734192609787 sec
Epoch : 2
Time for epoch 3 is 1157.1831784248352 sec
Epoch : 3
Time for epoch 4 is 1157.2712264060974 sec
Epoch : 4
Time for epoch 5 is 1156.124682188034 sec
Epoch : 5
Time for epoch 6 is 1156.5954101085663 sec
Epoch : 6
Time for epoch 7 is 1156.39417719841 sec
Epoch : 7
Time for epoch 8 is 1155.9282727241516 sec
Epoch : 8
Time for epoch 9 is 1155.4847421646118 sec
Epoch : 9
Time for epoch 10 is 1155.6112306118011 sec
Epoch : 10
Time for epoch 11 is 1156.8884525299072 sec
Epoch : 11
Time for epoch 12 is 1155.8321166038513 sec
Epoch : 12
Time for epoch 13 is 1156.2034151554108 sec
Epoch : 13
Time for epoch 14 is 1156.144341468811 sec
Epoch : 14
Time for epoch 15 is 1156.6590414047241 sec
Epoch : 15
Time for epoch 16 is 1156.2831363677979 sec
Epoch : 16
Time for epoch 17 is 1155.949970960617 sec
Epoch : 17
Time for epoch 18 is 1156.0473191738129 sec
Epoch : 18
Time for epoch 19 is 1156.2700366973877 sec
Epoch : 19
Time for epoch 20 is 1155.9414064884186 sec
Epoch : 20
Time for epoch 21 is 1156.3152267932892 sec
Epoch : 21
Time for epoch 22 is 1155.8217561244965 sec
Epoch : 22
Time for epoch 23 is 1157.6542057991028 sec
Epoch : 23
Time for epoch 24 is 1179.289409160614 sec
Epoch : 24
Time for epoch 25 is 1166.6497490406036 sec
Epoch : 25
Time for epoch 26 is 1156.375364780426 sec
Epoch : 26
Time for epoch 27 is 1156.0051469802856 sec
Epoch : 27
Time for epoch 28 is 1165.9885909557343 sec
Epoch : 28
Time for epoch 29 is 1174.0690515041351 sec
Epoch : 29
Time for epoch 30 is 1170.453049659729 sec
Epoch : 30
WARNING:tensorflow:Collective ops is not configured at program startup. Some performance features may not be enabled.
INFO:tensorflow:Single-worker MultiWorkerMirroredStrategy with local_devices = ('/device:GPU:0',), communication = CommunicationImplementation.AUTO
Training Start...
Epoch : 0
Training step
Generator for noise
Discriminator for images
Discriminator for noise
gen_loss : Tensor("binary_crossentropy/weighted_loss/value:0", shape=(), dtype=float32)
disc_loss : Tensor("add:0", shape=(), dtype=float32)
Time for epoch 1 is 1155.8805828094482 sec
Generating DCGAN model.
(None, 45, 30, 256)
(None, 45, 30, 128)
DCGAN model completed
(1, 360, 240, 3)
Model: "sequential_2"
_________________________________________________________________
 Layer (type)                Output Shape              Param #
=================================================================
 dense_2 (Dense)             (None, 345600)            34560000
 reshape_1 (Reshape)         (None, 45, 30, 256)       0
 conv2d_transpose_4 (Conv2DT  (None, 45, 30, 128)      819200
 ranspose)
 leaky_re_lu_8 (LeakyReLU)   (None, 45, 30, 128)       0
 conv2d_transpose_5 (Conv2DT  (None, 90, 60, 64)       204800
 ranspose)
 leaky_re_lu_9 (LeakyReLU)   (None, 90, 60, 64)        0
 conv2d_transpose_6 (Conv2DT  (None, 180, 120, 32)     51200
 ranspose)
 leaky_re_lu_10 (LeakyReLU)  (None, 180, 120, 32)      0
 conv2d_transpose_7 (Conv2DT  (None, 360, 240, 3)      2400
 ranspose)
=================================================================
Total params: 35,637,600
Trainable params: 35,637,600
Non-trainable params: 0
_________________________________________________________________
Wall time: 161 ms
Generating DCGAN model.
(None, 45, 30, 256)
(None, 45, 30, 128)
DCGAN model completed
(1, 360, 240, 3)
Model: "sequential_3"
_________________________________________________________________
 Layer (type)                Output Shape              Param #
=================================================================
 dense_3 (Dense)             (None, 345600)            34560000
 reshape_2 (Reshape)         (None, 45, 30, 256)       0
 conv2d_transpose_8 (Conv2DT  (None, 45, 30, 128)      819200
 ranspose)
 leaky_re_lu_11 (LeakyReLU)  (None, 45, 30, 128)       0
 conv2d_transpose_9 (Conv2DT  (None, 90, 60, 64)       204800
 ranspose)
 leaky_re_lu_12 (LeakyReLU)  (None, 90, 60, 64)        0
 conv2d_transpose_10 (Conv2D  (None, 180, 120, 32)     51200
 Transpose)
 leaky_re_lu_13 (LeakyReLU)  (None, 180, 120, 32)      0
 conv2d_transpose_11 (Conv2D  (None, 360, 240, 3)      2400
 Transpose)
=================================================================
Total params: 35,637,600
Trainable params: 35,637,600
Non-trainable params: 0
_________________________________________________________________
Wall time: 158 ms
WARNING:tensorflow:Collective ops is not configured at program startup. Some performance features may not be enabled.
INFO:tensorflow:Single-worker MultiWorkerMirroredStrategy with local_devices = ('/device:GPU:0',), communication = CommunicationImplementation.AUTO
Training Start...
Epoch : 0
Training step
Generator for noise
Discriminator for images
Discriminator for noise
gen_loss : Tensor("binary_crossentropy/weighted_loss/value:0", shape=(), dtype=float32)
disc_loss : Tensor("add:0", shape=(), dtype=float32)
Training step
Generator for noise
Discriminator for images
Discriminator for noise
gen_loss : Tensor("binary_crossentropy/weighted_loss/value:0", shape=(), dtype=float32)
